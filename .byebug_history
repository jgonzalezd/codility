exit
array_b = array_a[(first_half..array_a.size-1)]+array_a[(0..first_half-1)]
array_b = array_a[(first_half..array_a.size-1)]+array_a[(0..first_half)]
array_b = array_a[(first_half..array_a.size-1)]
array_b = array_a[(second_half..array_a.size-1)]
array_b = array_a[(0..second_half)]+array_a[(first_half..array_a.size-1)]
array_b = array_a[(0..second_half)]+array_a[(second_half..array_a.size-1)]
array_b = array_a[(0..first_half)]+array_a[(second_half..array_a.size-1)]
first_half
0..first_half-1
k
array_b = array_a[(0..first_half-1)]+array_a[(first_half..array_a.size-1)]
array_b[*(0..first_half),*(second_half..array_a.size)]
[*(0..first_half),*(second_half..array_a.size)]
[*(0..first_half)]
array_b[*(0..first_half),*(second_half..array_a.size)] = array_a[*(0..first_half-1),*(first_half..array_a.size-1)]
array_b[0..first_half,second_half..array_a.size] = array_a[0..first_half-1,first_half..array_a.size-1]
array_b[second_half..array_a.size] = array_a[0..first_half-1]
array_b[0..first_half] = array_a[first_half..array_a.size-1]
array_a[first_half..array_a.size-1]
array_a[first_half..array_a.size]
array_a[second_half..array_a.size]
array_a[second_half..array_a.size-1]
array_b[0..first_half] = array_a[second_half..array_a.size-1]
array_b[second_half..array_a.size] = array_a[0..first_half-1]
second_half
second-half
array_a[0..first_half-1]
first_halfarray_a[0..first_half-1]
k
exit
first_half
k-index
k-1
k
index
array_b
exit
k+0
index
exit
array_a.size-k
array_b
k
index
n
e
k
index
exit
array_b
exit
b
exit
Array.new(a.size){ nil }
a.size
exit
a.size
